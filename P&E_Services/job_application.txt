import 'dart:io';

import 'package:file_picker/file_picker.dart';
import 'package:flutter/material.dart';
class Loginscrren extends StatefulWidget {
  const Loginscrren({Key? key}) : super(key: key);

  @override
  State<Loginscrren> createState() => _LoginscrrenState();
}

class _LoginscrrenState extends State<Loginscrren> {
  FilePickerResult? result;
  String? _fileName;
  PlatformFile?pickedFile;
  bool isLoading=false;
  File?fileToDisplay;

  get $ => fileToDisplay;
  void pickFile() async {
    try{
      setState(() {
        isLoading=true;
      });
      result= await FilePicker.platform.pickFiles(
        type:FileType.custom,
        allowedExtensions: ['pdf'],
      );
      if (result!=null){
        _fileName=result!.files.first.name;
        pickedFile=result!.files.first;
        fileToDisplay=File(pickedFile!.path.toString());
      //  print('File name $_fileName');
        //Text($-_fileName);

      }
      setState(() {
        isLoading=false;
      });

    }catch(e){

    }
  }
  final GlobalKey<FormState> _formKey= GlobalKey();
  String radioItem= '';
  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text('Job Application'),
        backgroundColor: Colors.amber,
      ),
      body: Stack(
        children: <Widget>[
          Center(
            child: Card(
              //shape: RoundedRectangleBorder(
                //borderRadius: BorderRadius.circular(30.0),
              //),
              child: Container(
                height: 600,
                width: 450,
                padding: EdgeInsets.all(16),
                color: Colors.black12,
                child: Form(
                  key: _formKey,
                  child: SingleChildScrollView(
                    child: Column(
                      children: <Widget>[
                        TextFormField(
                          decoration: InputDecoration(labelText: 'Name'),
                          keyboardType: TextInputType.name,
                        ),
                        TextFormField(
                          decoration: InputDecoration(labelText: 'E-mail'),
                          keyboardType: TextInputType.emailAddress,
                        ),
                        TextFormField(
                          decoration: InputDecoration(labelText: 'Phone Number'),
                          keyboardType: TextInputType.number,
                        ),
                        Text(
                            'Address',
                            style: TextStyle(
                                  fontSize: 20,

                             )
                        ),
                        TextFormField(
                          decoration: InputDecoration(
                            hintText: 'Street Address'
                          ),
                          keyboardType: TextInputType.text,
                        ),
                        TextFormField(
                          decoration: InputDecoration(
                              hintText: 'City'
                          ),
                          keyboardType: TextInputType.text,
                        ),
                        TextFormField(
                          decoration: InputDecoration(
                              hintText: 'State'
                          ),
                          keyboardType: TextInputType.streetAddress,
                        ),
                        TextFormField(
                          decoration: InputDecoration(
                              hintText: 'Country'
                          ),
                          keyboardType: TextInputType.streetAddress,
                        ),
                        Text(
                            'Applying for position',style: TextStyle(
                          fontSize: 20,
                        )
                        ),
                      Container(
                        width: 150,
                        child:Row(
                          mainAxisAlignment: MainAxisAlignment.start,children:<Widget>[
                        Radio(value: 'Plumber', groupValue: radioItem, onChanged: (val){
                          setState(() {});
                          radioItem=val.toString();
                        } ),
                        Text('Plumber')
                          ]
                         ),
                      ),
                        Container(
                          width: 150,
                          child:Row(
                              mainAxisAlignment: MainAxisAlignment.start,children:<Widget>[
                            Radio(value: 'Electrician', groupValue: radioItem, onChanged: (val) {
                              setState(() {});
                              radioItem=val.toString();
                            }),
                            Text('Electrician')
                          ]
                          ),
                        ),
                        Container(
                         child: isLoading
                             ?CircularProgressIndicator()
                             :TextButton(onPressed: () {
                               pickFile();
                         }, child: Text("Pick File")),
                        ),
                        if (pickedFile!=null)
                          SizedBox(
                            height: 300,width: 400,child:Image.file(fileToDisplay!)
                          ),

                ]
              )
            )
    )
    )
    )
          )
  ]
      ),
    );
  }
}
